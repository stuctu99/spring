<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx https://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
		
	<!-- 
		3개의 DB연결에 필요한 bean을 등록함.
		1. Data 연결 정보를 저장하는 클래스 -> BasicDataSource 클래스
		2. SqlSession을 생성해주는 클래스 -> SqlSessionFactoryBean 클래스
		3. SqlSession 클래스 -> SqlSessionTemplate클래스
		
	 -->	
		
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<property name="url" value="jdbc:oracle:thin:@14.36.141.71:10001:xe"/>
		<property name="username" value="spring"/>
		<property name="password" value="spring"/>
	</bean>		
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
<!-- 		<property name="dataSource" ref="dataSource"/> -->
		<property name="DataSource" ref="proxyDataSource"/>
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<property name="mapperLocations" value="classpath:mappers/**/*.xml"/>
	</bean>
	
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory"/>
	</bean>
	
	<bean id="proxyDataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
		<constructor-arg index="0" ref="dataSource"></constructor-arg>
		<property name="logFormatter">
			<bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
				<property name="loggingType" value="MULTI_LINE"/>
				<property name="sqlPrefix" value="[SQL]"/>
			</bean>
		</property>
	</bean>
	
<!-- 	트랜젝션 처리 bean 등록하기 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="proxyDataSource"></property>
	</bean>
	
	<!-- 어노테이션 방식으로 트랜젝션 처리하기 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	
</beans>