<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:security="http://www.springframework.org/schema/security"
   xmlns:context="http://www.springframework.org/schema/context"
   xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-5.8.xsd
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
   <!-- 패스워드 암호화를 제공하는 클래스를 bean으로 등록하기 -->
   <bean id="bcryptPassword" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>   
   
   <!-- spring-security를 이용하여 인증 처리하기 -->

	<security:http auto-config="true">
		<!-- 로그인에 대한 설정 -->
		<!-- id, password를 입력받아 인증 처리 
		 	<security:form-login>태그를 이용해서 설정 
		 	username-parameter: id값의 name속성명 -> default = username
		 	password-parameter: password값에 대한 name 속성명 설정-> pssowrd
		 	login-page: 커스터마이징 로그인페이지 주소
		 	default-target-url: 인증 후 연결될 기본 주소 설정 ->이전 페이지
		 	authentication-failure-foward-url: 인증 실패 후 연결될 서비스 URL
		 	authentication-success-foward-url: 인증 성공 후 연결될 서비스 URL
		 	login-processing-url : 로그인 처리할 URL주소를 등록 * 시큐리티가 처리할 주소
		 	
		 -->
		<security:form-login login-page="/loginpage"
							username-parameter="userId"
							password-parameter="pw"
							login-processing-url="/loginend"
							authentication-failure-forward-url="/loginfail"
							authentication-success-forward-url="/loginsuccess"/>
		<security:csrf disabled="true"/>
		
		<!-- 로그아웃 처리 설정 
			logout-url: 로그아웃 처리할 URL
			logout-success-url: 로그아웃 처리 후 이동할 URL-->
<!-- 		<security:logout/> -->
		
		<!-- 권한에 따른 이용서비스 설정(URL패턴으로 설정)  
			<security:inercept-url>태그를 이용해서 설정
			pattern: 서비스 URL패턴 /member/*, notice/*
			access: 권한에 대한 설정 permitAll(), hasAnyAuthority("권한명","권한명"...), 
						hasAuthority("권한"), hasRole("ROLE_USER"), hasAnyRole("ROLE_ADMIN","ROLE_USER")
			기본적으로 모든 서비스 차단함.
			
			-->
			<security:intercept-url pattern="/" access="permitAll()"/>
			<security:intercept-url pattern="/loginpage" access="permitAll()"/>
			<security:intercept-url pattern="/resources/**" access="permitAll()"/>
			<security:intercept-url pattern="/**" access="hasAnyAuthority('admin','user')"/>
		
	</security:http>

	<security:authentication-manager>
		<security:authentication-provider>
			<security:user-service>
				<security:user name="bslove" authorities="admin" password="$2a$10$AsVFk02Oak0bIVNAI3gk7eKsc9D/4wxow4kHW7xI1S6fc2FzDcIlC"/>
			</security:user-service>
			<security:password-encoder ref="bcryptPassword"/>
		</security:authentication-provider>
	</security:authentication-manager>
</beans>